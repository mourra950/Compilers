 Program sfafa; USES FEFWF, FWEFWF,FFEWFWF; Const eqqefqf = 23131; qeqefqqe = 2172193; VAR qwqwrqwr: 5768; qweqeqw, qweqweq1231w:132123;	

Main Program Division
1. program -> header declaration execution


	Program Header
2. header -> programName librarySection | programName
3. programName -> program str ;
4. librarySection -> uses library ; | ε
5. library -> identifier library'								
6. library' -> , identifier library' | ε


	Program Decleration
7. declaration -> constDecleration varDecleration functionDecleration procedureDecleration

	Const Decleration
8. constDecleration -> const constName | ε
9. constName ->  identifier = constant ; constName'				--Constant means a number
10. constName' -> identifier = constant ; constName' | ε

	Var Decleration
11. varDecleration -> var varDecleration1 | ε
12. varDecleration1 ->  varName : dataType ; varDecleration1'
12.5. dataType -> constant | real | char | identifier | boolean			
13. varDecleration1' ->  varName : dataType ; varDecleration1' | ε
14. varName -> identifier varName'  								
15. varName' -> , identifier  varName' | ε
	
	Function Decleration
16. functionDecleration -> function identifier arguments returnStatement ; varDecleration funcAndProcdBody functionDecleration' | functionDecleration' 
17. functionDecleration' -> function identifier arguments returnStatement ; varDecleration funcAndProcdBody functionDecleration' | ε
17.5. returnStatement - > : dataType | ε
18. arguments -> ( argument ) | ε
19. argument -> finalArgument argument' 		
20. argument' -> ; finalArgument argument' | ε
21. finalArgument -> identifier : dataType
22. dataType -> int | real | char | str | boolean | INTEGER | STRING | BOOLEAN | REAL | CHAR

	Function and Procedure Body
23. funcAndProcdBody -> begin statements end ;
	
	Statements Decleration
24. statements -> statement statementsDash 
24.5. statementsDash ->  statement statementsDash | ε 
25. statement -> read ( identifier ) ;|
		     readln ( identifier ) ;|
		     write ( writeArgument ) ;|
		     writeln ( writeBody ) ;|
		     if condition then statements ElseClause|
		     for identifier := int to int do statements|		// Integer can be variable?
		     repeat statements until condition ;|
		     identifier := expression ;|
		     varDecleration |
		     constDeleration |
			ε

	Procedure Deleration
26. procedureDecleration -> procedure identifier arguments ; varDecleration funcAndProcdBody procedureDecleration' | procedureDecleration' 
27. procedureDecleration' -> procedure identifier arguments ; varDecleration funcAndProcdBody procedureDecleration' | ε


	Execution
28. execution -> begin statements end .

	Statements Decleraion Cont.d
29. WriteBody -> writeArgument writeBodyDash
29.5. writeBodyDash -> , writeArgument writeBodeyDash | ε
30. WriteArgument -> str | identifier
31. condition -> Expresion RelOp Expression
32. Expresion -> Term ExpressionDash
32.5 ExpresionDash -> AddOp Term ExpressionDash | ε
33. Term -> Factor TermDash
33.5 TermDash -> MultOp Factor TermDash | ε
33. Factor -> identifier | constant   				--Constant means a number
34. RelOp -> <= | >= | = | > | <
35. AddOp -> + | -
36. MultOp -> * | /
37. ElseClause -> else statements | ε
38. Constant-> real | integer